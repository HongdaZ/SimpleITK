# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  - next
  - release
variables:
  ExternalDataVersion: 1.2.0
jobs:
  - job: Linux
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
      - checkout: self
        clean: true
        fetchDepth: 5
      - bash: |
          set -x
          if [ -n "$(System.PullRequest.SourceCommitId)" ]; then
            git checkout $(System.PullRequest.SourceCommitId)
          fi
      - bash: |
          set -x
          git clone -b dashboard --single-branch ${BUILD_REPOSITORY_URI} SimpleITK-dashboard

          curl -L -O https://github.com/SimpleITK/SimpleITK/releases/download/v$(ExternalDataVersion)/SimpleITKData-$(ExternalDataVersion).tar.gz
          cmake -E tar xfz SimpleITKData-$(ExternalDataVersion).tar.gz
          cmake -E rename SimpleITK-$(ExternalDataVersion)/.ExternalData/MD5 $(Build.SourcesDirectory)/.ExternalData/MD5
        displayName: Download dashboard scripts and testing data
        workingDirectory: $(Agent.BuildDirectory)
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.6'
          architecture: 'x64'
          addToPath: true
      - script: |
          python --version
          sudo python -m pip install setuptools
          sudo python -m pip install ninja scikit-ci-addons
        displayName: 'Install ninja dependency'
      - bash: |
          set -x
          c++ --version
          cmake --version
          ninja --version
          ctest -S ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/azure.cmake -V -j 4
        displayName: Build and test
        env:
          CTEST_BUILD_CONFIGURATION: MinSizeRel
          CTEST_OUTPUT_ON_FALURE: 1
          DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
          ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
        workingDirectory: $(Agent.BuildDirectory)
      - script: |
          ci_addons ctest_junit_formatter $(Build.SourcesDirectory)-build > $(Agent.BuildDirectory)/JUnitTestResults.xml
        condition: succeededOrFailed()
        displayName: 'Format CTest output in JUnit format'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "$(Agent.BuildDirectory)/JUnitTestResults.xml"
          testRunTitle: 'CTest $(Agent.OS)'
        condition: succeededOrFailed()
        displayName: 'Publish test results'

  - job: macOS
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    pool:
      vmImage: 'macOS-10.13'

    steps:
      - checkout: self
        clean: true
        fetchDepth: 5
      - bash: |
          set -x
          if [ -n "$(System.PullRequest.SourceCommitId)" ]; then
            git checkout $(System.PullRequest.SourceCommitId)
          fi
      - bash: |
          set -x
          git clone -b dashboard --single-branch ${BUILD_REPOSITORY_URI} SimpleITK-dashboard

          curl -L -O https://github.com/SimpleITK/SimpleITK/releases/download/v$(ExternalDataVersion)/SimpleITKData-$(ExternalDataVersion).tar.gz
          cmake -E tar xfz SimpleITKData-$(ExternalDataVersion).tar.gz
          cmake -E rename SimpleITK-$(ExternalDataVersion)/.ExternalData/MD5 $(Build.SourcesDirectory)/.ExternalData/MD5
        displayName: Download dashboard scripts  and testing data
        workingDirectory: $(Agent.BuildDirectory)
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.6'
          architecture: 'x64'
          addToPath: true
      - script: |
          python --version
          sudo python -m pip install setuptools
          sudo python -m pip install ninja scikit-ci-addons
        displayName: 'Install ninja dependency'
      - bash: |
          set -x
          c++ --version
          cmake --version
          ninja --version
          ctest -S ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/azure.cmake -V -j 4
        displayName: Build and test
        env:
          CTEST_BUILD_CONFIGURATION: MinSizeRel
          CTEST_OUTPUT_ON_FALURE: 1
          DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
          ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
        workingDirectory: $(Agent.BuildDirectory)
      - script: |
          ci_addons ctest_junit_formatter $(Build.SourcesDirectory)-build > $(Agent.BuildDirectory)/JUnitTestResults.xml
        condition: succeededOrFailed()
        displayName: 'Format CTest output in JUnit format'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "$(Agent.BuildDirectory)/JUnitTestResults.xml"
          testRunTitle: 'CTest $(Agent.OS)'
        condition: succeededOrFailed()
        displayName: 'Publish test results'

  - job: Windows
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - checkout: self
        clean: true
        fetchDepth: 5
      - script: |
          if DEFINED SYSTEM_PULLREQUEST_SOURCECOMMITID git checkout $(System.PullRequest.SourceCommitId)
        displayName: Checkout pull request HEAD
      - bash: |
          set -x
          git clone -b dashboard --single-branch ${BUILD_REPOSITORY_URI} SimpleITK-dashboard

          curl -L -O https://github.com/SimpleITK/SimpleITK/releases/download/v$(ExternalDataVersion)/SimpleITKData-$(ExternalDataVersion).tar.gz
          cmake -E tar xfz SimpleITKData-$(ExternalDataVersion).tar.gz
          cmake -E rename "SimpleITK-$(ExternalDataVersion)/.ExternalData/MD5" "$(Build.SourcesDirectory)/.ExternalData/MD5"
        displayName: Download dashboard scripts and testing data
        workingDirectory: $(Agent.BuildDirectory)
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.6'
          architecture: 'x64'
          addToPath: true
      - script: |
          python --version
          python -m pip install setuptools
          python -m pip install ninja scikit-ci-addons
        displayName: 'Install ninja dependency'
      - script: |
          cmake --version
          ctest -S "$(Build.SourcesDirectory)/Testing/CI/Azure/azure.cmake" -V -j 4
        displayName: Build and test
        env:
          CTEST_BUILD_CONFIGURATION: MinSizeRel
          CTEST_OUTPUT_ON_FALURE: 1
          CTEST_CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
          DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
          ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
          CXXFLAGS: /MP
          CFLAGS: /MP
        workingDirectory: $(Agent.BuildDirectory)
      - script: |
          ci_addons ctest_junit_formatter $(Build.SourcesDirectory)-build > $(Agent.BuildDirectory)/JUnitTestResults.xml
        condition: succeededOrFailed()
        displayName: 'Format CTest output in JUnit format'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "$(Agent.BuildDirectory)/JUnitTestResults.xml"
          testRunTitle: 'CTest $(Agent.OS)'
        condition: succeededOrFailed()
        displayName: 'Publish test results'
  - job:  WindowsVS2008
    timeoutInMinutes: 240
    strategy:
      matrix:
        x86:
          CTEST_CMAKE_GENERATOR: "Visual Studio 9 2008"
        x64:
          CTEST_CMAKE_GENERATOR: "Visual Studio 9 2008 Win64"
    pool:
      name: 'Default'
      demands:
        - VS90COMNTOOLS
    workspace:
      clean: all
    variables:
      coreBinaryDirectory:  '$(Agent.BuildDirectory)/sitk-build'
      CTEST_CONFIGURATION_TYPE: MinSizeRel
      DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
      DASHBOARD_GIT_BRANCH: $[ dependencies.Configure.outputs['configure.BuildHash'] ]
    steps:
      - checkout: self
        clean: true
        fetchDepth: 5
      - script: |
           if DEFINED SYSTEM_PULLREQUEST_SOURCECOMMITID git checkout $(System.PullRequest.SourceCommitId)
        displayName: Checkout pull request HEAD
      - script: |
          git clone -b dashboard --single-branch %BUILD_REPOSITORY_URI% SimpleITK-dashboard
        displayName: Download dashboard scripts
        workingDirectory: $(Agent.BuildDirectory)
      - script: |
          cmake --version
          ctest -S "$(Build.SourcesDirectory)/Testing/CI/Azure/azure.cmake" -V
        displayName: Build and test
        workingDirectory: $(Agent.BuildDirectory)
        env:
          CTEST_BINARY_DIRECTORY: $(coreBinaryDirectory)
          ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
          CXXFLAGS: /MP
          CFLAGS: /MP
          CTEST_CACHE: |
            BUILD_DOCUMENTS:BOOL=OFF
            BUILD_EXAMPLES:BOOL=N
            BUILD_SHARED_LIBS:BOOL=OFF
            BUILD_TESTING:BOOL=ON
            WRAP_DEFAULT:BOOL=OFF
            SimpleITK_BUILD_DISTRIBUTE:BOOL=ON
